#!/bin/sh

# --- README --- #
# to run use 
# curl -fsSL https://raw.githubusercontent.com/MidnightRocket/linux-update-scripts/main/dnsproxy/debian/install | sudo sh
#
#
# --- --- ---

# POSIX compliant implementation
# https://stackoverflow.com/a/52586842
if [ "$(id -u)" -ne 0 ];then
	echo "Requires root!"
	exec sudo "$0" "$@"
	# Automatically rerun script with root
fi



mktemp="$(command -v mktemp)"
cat="$(command -v cat)"
curl="$(command -v curl)"
sha256sum="$(command -v sha256sum)"


TMPDIR="$($mktemp -d)"
trap 'rm -rf -- "$TMPDIR"' EXIT


# downloadFile url sha256sum save-path
downloadFile() {
	url="$1"
	shasum="$2"
	saveTo="$3"

	tmpFile="$($mktemp -p $TMPDIR)"
	$curl -f $1 -o $tmpFile
	
	if [ "$?" -ne 0 ]; then
		echo "Could not download file from: $url"
		exit 1
	fi
	
	echo "$shasum $tmpFile" | $sha256sum --status -c

	if [ "$?" -ne 0 ]; then
		echo "Failed to validate file from: $url"
		echo "File sha256sum mismatch!"
		echo "Wanted: $($sha256sum $tmpFile)"
		echo "But got: $shasum"
		exit 2
	fi
	
	echo "installing to: $saveTo"
	cp $tmpFile $saveTo
}

baseUrl="https://raw.githubusercontent.com/MidnightRocket/linux-update-scripts/main/dnsproxy/debian"



binDir="/usr/local/bin"



baseName="dnsproxy-wrapper"
file="$binDir/$baseName"
downloadFile ${baseUrl}/$baseName 21f9fe6c8adf3cda609d85049dc3f0cb12e9525bd6a2adf86e40120b32a1ee9f $file
# Must be executable
chmod 755 $file



# --- Create config directory

configDir="/etc/dnsproxy-configs"

if [ ! -d "$configDir" ]; then
	echo "Creating config dir in: $configDir"
	mkdir $configDir
	chmod 755 "$configDir"

	baseName="config.conf"
	file="$configDir/$baseName"
	downloadFile ${baseUrl}/configs/$baseName f1c2929c92a11739c9aca6755b304852dd3f2cf708a204851b78406f1d337b4f $file
	# config.conf need to execute as it is a script
	chmod 755 $file


	baseName="upstream"
	file="$configDir/$baseName"
	downloadFile ${baseUrl}/configs/$baseName 2a243445c1845dd2b2cb32ec7f10033dd23e2eab63c885028e389c31a8bb86e3 $file
	baseName="fallback"
	file="$configDir/$baseName"
	downloadFile ${baseUrl}/configs/$baseName 97ddc81ac24901654b1ce226640d85bde5773d46969a6123dc24f9bafbcc7aa0 $file
fi




# https://github.com/joshcangit/dnsproxy-resolvconf/blob/4353c5e2cee12779c392947d09dae84504ac7a05/dnsproxy-setup.sh#L19
#
# use uname -m to get archtype


getArchtype() {
	arch="$(uname -m)"
	case "$arch" in
		*x86_64*) 
			echo "386";;
		*aarch64*)
			echo "arm64";;
	esac
}


REPO="https://github.com/AdguardTeam/dnsproxy"
getLatestVersion() {

	$curl -ISs "${REPO}/releases/latest" | grep -i ^location: | sed 's/.*\/\([v0-9.]\+\).*/\1/'
}


getFileName() {
	echo "dnsproxy-linux-$(getArchtype)-$1.tar.gz"
}

tar="$(command -v tar)"

downloadDNSProxy() {
	local LATEST="$(getLatestVersion)"
	local FILENAME="$(getFileName $LATEST)"
	local URL="${REPO}/releases/download/${LATEST}/$FILENAME"
	printf "Downloading from: "
	echo "$URL"
	$curl -L $URL -o "$TMPDIR/$FILENAME" --compressed -H "Accept-Encoding: zstd, gzip, deflate"

	echo "$TMPDIR"

	local TPATH=$($tar -ztf $TMPDIR/$FILENAME | grep dnsproxy$)
	local RDIR=$(echo $TPATH | sed 's/^\.\///;s/dnsproxy$//')
	$tar -C $TMPDIR -zxf $TMPDIR/$FILENAME $TPATH
	mv -f $TMPDIR/${RDIR}dnsproxy $TMPDIR/dnsproxy


	# interactive shell for debugging 
	#IN_CUSTOM_SHELL="test-dnsproxy" TMPDIR="$TMPDIR" zsh
}

downloadDNSProxy


file="${TMPDIR}/dnsproxy"

if [ -f "$file" ]; then
	echo "success downloading file"
	echo "moving dnsproxy"
	mv "$file" "$binDir/dnsproxy"
else
	echo "Failed to download dnsproxy" 1>&2
	exit 1
fi









# --- Download systemd unit files
unitsDir="/etc/systemd/system"

serviceUnit="dnsproxy.service"
baseName="$serviceUnit"
file="$unitsDir/$baseName"
downloadFile ${baseUrl}/systemd/$baseName 717a22014558ce20dec2ae8b8087882fa8d00d8c9782bffb03a785ea2d2ada50 $file



systemctl="$(command -v systemctl)"


if [ "$1" = "--update" ]; then
	$systemctl stop $serviceUnit
	$systemctl daemon-reload
	$systemctl start $serviceUnit
else
	# Creates system user with no homedir, no login shell
	# And automatically creates matching group i.e. 'dnsproxy'
	useradd -s /usr/sbin/nologin --system -M dnsproxy

	# Make dnsproxy user owner of $configDir
	chown dnsproxy:dnsproxy -R $configDir


	$systemctl enable --now $serviceUnit
fi



$systemctl status $serviceUnit

echo 
echo "To restart service use" 
echo "\tsudo systemctl restart $serviceUnit"
echo
echo "To view logs use: "
echo "\tsudo journalctl -f -b -u $serviceUnit"

